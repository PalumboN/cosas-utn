* Testing
	- ¿Por qué testeamos?
		- Somos humanos y nos equivocamos.
		- Queremos asegurar la calidad de nuestro SW.
		- Robustez, consistencia, mantenibilidad.
		- Valor de testear > valor de NO testear.
		- Cobertura de tests.
	- ¿Qué testear?
		- Testear funcionalidades (no accesors).
		- Evitar llegar al debugging:
			- Es una paja.
			- Toma mucho tiempo (repetido por cada error).
			- Fácilmente se pierde el foco.
		- Importancia de la casuística:
			- Armar un buen conjunto de datos.
				- Completitud de los tests.
			- Testear lo que debe y no debe hacer.
			- No testear dos veces la misma cosa.
				- Evitar solapamientos.
	- Tipos de Tests:
		- Granularidad vs Automatización.
			- Integración vs Unitarias.
			- Automatizadas vs Manuales
		- Pruebas de regresión.
		- Teorías vs pruebas tradicionales. [Esto está bueno para Haskell]
	- Anatonía de los tests:
		- Precondiciones: construir el escenario.
			- Simple y específico.
			- Mínima redundancia.
		- Operaciones: hacer lo que se quiere testear.
			- Simple y específico.
			- No romper encapsulamiento.
		- Postcondiciones: resultado esperado.
			- Simple y específico.
			- Abstracciones.
	- Forma parte de la estructura del Sistema:
		- Declaratividad.
		- Expresividad.
		- Evitar lógica repetida.		
	- TDD:
		- Beneficios.
		- Limitaciones.
		
		
		
Cuando desarrollábamos en Smalltalk, cómo verificábamos que nuestros sistema hacía lo que se pedía? 
Exacto! Con los tests! Y a qué llamamos "test"?
Al código que verifica que nuestro código funciona BIEN. Y si recuerdan, tenía 3 partes fundamentales:

*** Anatomía de los tests ***

Y cuando lo hacíamos en Haskell o Prolog??
También testeábamos, pero en forma MANUAL, no autmática. 
Y cómo lo hacían: iban probando a medida que avanzaban con el desarrollo, o una vez que está todo terminado? (respuesta correcta: ambas). O sea, íbamos testeando a medida que avanzabamos y una vez que teníamos todo el caso de uso terminado probábamos que todo andara bien. O sea que hacíamos tests unitarios y después más de integración.

*** Tipos de tests ***

Y qué prefieren, tests manuales o automáticos? (Espero que digan automáticos, si no es así convencerlos :P) Bueno, hagámoslos.

*** Empezar con los tests de Prolog. Explicar PlUnit ***
